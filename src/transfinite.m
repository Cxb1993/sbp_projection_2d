function [G] = transfinite(LW,LE,LS,LN)
  % Transfinite interpolation
  G.x1 = @(r1,r2)...
    +(1+r1).*LE.x1(r2)/2 + (1-r1).*LW.x1(r2)/2 ...
    +(1+r2).*LN.x1(r1)/2 + (1-r2).*LS.x1(r1)/2 ...
    -(...
    +(1+r1).*(1+r2).*LE.x1( 1)...
    +(1-r1).*(1+r2).*LW.x1( 1)...
    +(1+r1).*(1-r2).*LE.x1(-1)...
    +(1-r1).*(1-r2).*LW.x1(-1)...
    )/4;

  G.x2 = @(r1,r2)...
    +(1+r1).*LE.x2(r2)/2 + (1-r1).*LW.x2(r2)/2 ...
    +(1+r2).*LN.x2(r1)/2 + (1-r2).*LS.x2(r1)/2 ...
    -(...
    +(1+r1).*(1+r2).*LE.x2( 1)...
    +(1-r1).*(1+r2).*LW.x2( 1)...
    +(1+r1).*(1-r2).*LE.x2(-1)...
    +(1-r1).*(1-r2).*LW.x2(-1)...
    )/4;

  % derivatives

  G.x1_1 = @(r1,r2)...
    +        LE.x1(r2) /2 -         LW.x1(r2) /2 ...
    +(1+r2).*LN.dx1(r1)/2 + (1-r2).*LS.dx1(r1)/2 ...
    -(...
    +(1+r2).*LE.x1( 1)...
    -(1+r2).*LW.x1( 1)...
    +(1-r2).*LE.x1(-1)...
    -(1-r2).*LW.x1(-1)...
    )/4;

  G.x1_2 = @(r1,r2)...
    +(1+r1).*LE.dx1(r2)/2 + (1-r1).*LW.dx1(r2)/2 ...
    +        LN.x1(r1) /2 -         LS.x1(r1) /2 ...
    -(...
    +(1+r1).*LE.x1( 1)...
    +(1-r1).*LW.x1( 1)...
    -(1+r1).*LE.x1(-1)...
    -(1-r1).*LW.x1(-1)...
    )/4;

  G.x2_1 = @(r1,r2)...
    +        LE.x2(r2) /2 -         LW.x2(r2) /2 ...
    +(1+r2).*LN.dx2(r1)/2 + (1-r2).*LS.dx2(r1)/2 ...
    -(...
    +(1+r2).*LE.x2( 1)...
    -(1+r2).*LW.x2( 1)...
    +(1-r2).*LE.x2(-1)...
    -(1-r2).*LW.x2(-1)...
    )/4;

  G.x2_2 = @(r1,r2)...
    +(1+r1).*LE.dx2(r2)/2 + (1-r1).*LW.dx2(r2)/2 ...
    +        LN.x2(r1) /2 -         LS.x2(r1) /2 ...
    -(...
    +(1+r1).*LE.x2( 1)...
    +(1-r1).*LW.x2( 1)...
    -(1+r1).*LE.x2(-1)...
    -(1-r1).*LW.x2(-1)...
    )/4;
end
