% RHS_SBP_BLOCK compute the RHS of an SBP block
% [dq] = rhs_sbp_block(OP,q,hw,he,hs,hn)
%
% inputs:
%   OP:      block data structure
%   q:       current solution data structure
%   h[wesn]: hat variables on side west, east, south, north
%
% outputs:
%   dq: rate data structure
function [dq] = rhs_sbp_block(OP,q,hw,he,hs,hn)

  % interior computation
  dq.v1 = -(OP.JI/OP.rho)*(OP.D1*OP.J*OP.r1_1 + OP.D2*OP.J*OP.r2_1)*q.pr;
  dq.v2 = -(OP.JI/OP.rho)*(OP.D1*OP.J*OP.r1_2 + OP.D2*OP.J*OP.r2_2)*q.pr;
  dq.pr = -OP.JI*OP.lam*(...
    +(OP.J*OP.r1_1*OP.D1 + OP.J*OP.r2_1*OP.D2)*q.v1...
    +(OP.J*OP.r1_2*OP.D1 + OP.J*OP.r2_2*OP.D2)*q.v2);

  % fluxes for v2
  dq.v1 = dq.v1 - (OP.JI/OP.rho)*(...
    +OP.Hi1*(OP.Le*OP.me*OP.ne1*(he.pr-OP.Le'*q.pr)...
           + OP.Lw*OP.mw*OP.nw1*(hw.pr-OP.Lw'*q.pr))...
    +OP.Hi2*(OP.Ln*OP.mn*OP.nn1*(hn.pr-OP.Ln'*q.pr)...
           + OP.Ls*OP.ms*OP.ns1*(hs.pr-OP.Ls'*q.pr)));

  % fluxes for v2
  dq.v2 = dq.v2 - (OP.JI/OP.rho)*(...
    +OP.Hi1*(OP.Le*OP.me*OP.ne2*(he.pr-OP.Le'*q.pr)...
           + OP.Lw*OP.mw*OP.nw2*(hw.pr-OP.Lw'*q.pr))...
    +OP.Hi2*(OP.Ln*OP.mn*OP.nn2*(hn.pr-OP.Ln'*q.pr)....
           + OP.Ls*OP.ms*OP.ns2*(hs.pr-OP.Ls'*q.pr)));

  % fluxes for pr
  dq.pr = dq.pr - OP.JI*OP.lam*(...
    +OP.Hi1*(...
     +OP.Le*OP.me*(he.vn-(OP.ne1*OP.Le'*q.v1+OP.ne2*OP.Le'*q.v2))...
     +OP.Lw*OP.mw*(hw.vn-(OP.nw1*OP.Lw'*q.v1+OP.nw2*OP.Lw'*q.v2)))...
    +OP.Hi2*(...
     +OP.Ln*OP.mn*(hn.vn-(OP.nn1*OP.Ln'*q.v1+OP.nn2*OP.Ln'*q.v2))...
     +OP.Ls*OP.ms*(hs.vn-(OP.ns1*OP.Ls'*q.v1+OP.ns2*OP.Ls'*q.v2))));
end
